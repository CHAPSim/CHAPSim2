#------------------------------------------------------------------------------#
# Description of the given parameters.
# The default flow direction:
#           X = 1 = the streamwise direction, flow direction.
#           Y = 2 = the wall-normal / radial direction.
#           Z = 3 = the spanwise direction.
#------------------------------------------------------------------------------#
# In [flowtype], please provide the basic flow information.
#
# iCase [int]:
#            1 = Plane Channel (Cartesian Coordinates). Default
#            2 = Circular Tube (Cylindrical Coordinates).
#            3 = Annular Tube (Cylindrical Coordinates).
#            4 = A Cube Box for Taylor Green vortex (Cartesian
#                  Coordinates).
#            5 = Code_Test with sin velocity input
# ithermo [int]:
#            0 = No Energy Equation, No Thermodynamics, Default
#            1 = Flow with Thermodynamics.
# iCHT [int]:
#            0 = No Conjugate Heat Transfer. Default
#            1 = Thermal Flow with Conjugate Heat Transfer.
#
[flowtype]
icase= 1
ithermo= 1
icht= 0
#------------------------------------------------------------------------------#
# In [decomposition], please provide the dimensions for domain
# decomposition.
#
# p_row [int]: 
# p_col [int]:
[decomposition]
p_row= 1
p_col= 1
#------------------------------------------------------------------------------#
# In [geometry], please provide the computational domain information.
#           All lengths are scaled by the half channel height or the radius of
#           the pipe interior diameter.
#           - The default channel in the wall-normal direction is y in [-1, 1]
#           - The default pipe in the wall-normal direction is r in [0, 1]
#           - The default Taylor Green Vortex Box is 2pi * 2pi * 2pi
#
# lxx [double]:
#           - scaled computational length of the streamwise direction
# lzz [double]
#           - scaled computational length of the spanwise direction for the
#             channel flow.
#           - for pipe flow, it is 2pi by default.
#           - Change it to any value < 2pi to get a fan-shaped Domain with
#             periodic spanwise direction.
# lyb [double]
#           - valid only for the annular flow.
#           - the length from the centre of channel /pipe to the bottom of y.
#             eg. - 1.0 for Channel flow, 0 for pipe flow
# lyt [double]
#           - valid only for the annular flow.
#           - the length from the centre of channel /pipe to the top y boundary.
#             eg. 1.0 for channel flow, 1 for pipe flow, 1.0 for nnnular flow.
#
[geometry]
lxx= 6.28
lyt= 3.14
lyb= -3.14
lzz= 2.0
#------------------------------------------------------------------------------#
# In [mesh], please provide the grid/cell numbers in each direction.
#            X = uniform distribution
#            Z = uniform distribution
#            Y = uniform or clustered/streching distribution
#
# ncx [int]:
#             - The cell number in the X direction
# ncz [int]:
#            - The cell number in the Z direction.
# ncy [int]:
#            - The cell number in the wall-normal direction.
#            - Cartesian: in the full channel height
#            - Cylindrical: in the radial length
# istret [int]
#           0 = ISTRET_NO
#           1 = ISTRET_2SIDES
#           2 = ISTRET_BOTTOM
#           3 = ISTRET_TOP
#           4 = ISTRET_CENTRE
# rstret [double]:
#           beta value in the stretching function. 
#           See Eq.(54) of Laizet2009JCP
[mesh]
ncx= 128
ncy= 128
ncz= 8
istret= 1
rstret= 0.1

[flowparams]
ren= 2800.0

[timestepping]
dt= 0.001
iterFlowFirst= 1
iterFlowLast= 1000
#------------------------------------------------------------------------------#
# In [boundary], please provide flow boundary conditions.
# the boundary condition options:
#           0 = IBC_INTERIOR
#           1 = IBC_PERIODIC
#           2 = IBC_UDIRICHLET, the Dirichlet B.C./ the 1st type B.C./ the fixed B.C.
#           3 = IBC_SYMMETRIC
#
# ifbcx[int, int, real, real ]:
#           [int, int] = the two B.C. in the streamwise X direction at the two ends
#           [real, real] = the given velocity at this direction at two ends. 
#                          valide only for Dirichlet B.C.
# ifbcy[int, int, real, real ]: same as above, but in Y direction.
# ifbcz[int, int, real, real ]: same as above, but in Z direction.
[boundary]
ifbcx= 1, 1, 0.0, 0.0
ifbcy= 2, 2, 0.0, 0.0
ifbcz= 1, 1, 0.0, 0.0

#------------------------------------------------------------------------------#
# In [ioparams], please provide flow i.o.
# the irestart options:
#                 INITIAL_RANDOM  = 1, &
#                 INITIAL_RESTART = 2, &
#                 INITIAL_INTERPL = 3

[ioparams]
irestart= 1
ncheckpoint= 200
nvisu= 100
iterStatsFirst= 500
nstats= 100

#------------------------------------------------------------------------------#
# In schemes], please provide numerical scheme related parameters.
# iAccuracy[int]: accuracy for the 1st and 2nd deriviative and interpolation.
#               the accuracy options:
#                        IACCU_CD2 = 1, &
#                        IACCU_CD4 = 2, &
#                        IACCU_CP4 = 3, &
#                        IACCU_CP6 = 4
[schemes]
iAccuracy= 4
itimestepping= 3
iviscous= 0
ipressure= 0

[initialization]
renIni= 28000.0
iterRenIniEnd= 1000
initNoise= 0.6

[periodicdriven]
idriven= 1

[thermohydraulics]
ifluid= 3
igravity= 0
lenRef= 0.01
t0Ref= 400.0
tiRef= 450.0
itbcy= 1, 1
tbcy= 10000.0, 10000.0
iterThermoFirst= 1
iterThermoLast= 20000

