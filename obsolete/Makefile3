.PHONY: debug default clean
.SUFFIXES:

PROGRAM= CHAPSim
PRG_OBJ = $(PROGRAM).o

include ./lib/2decomp_fft/src/Makefile.inc
INCLUDE = -I./lib/2decomp_fft/include
LIBS = -L./lib/2decomp_fft/lib -l2decomp_fft

DIR_SRC= ./src
DIR_BIN= ./bin
DIR_OBJ= ./obj
DIR_MOD= ./mod

SRCS=$(wildcard $(DIR_SRC)/*.f90)
OBJS=$(patsubst %.f90,%.o,$(SRCS))

MODS=$(wildcard $(DIR_SRC)/*.f90)
MOD_OBJS=$(patsubst %.f90,%.o,$(MODS))

OPTIONS= -g -fbacktrace -fbounds-check -fcheck=all -Wall -ffpe-trap=invalid,zero,overflow

default :
	@cd $(DIR_BIN)
	make $(PROGRAM) -f Makefile
	@mv *.mod $(DIR_MOD)
	@mv *.o $(DIR_OBJ)
	@mv $(PROGRAM) $(DIR_BIN)

# Compiler steps for all objects
$(OBJS) : %.o : $(DIR_SRC)/%.f90
	$(F90) $(INCLUDE) $(OPTIONS) $(F90FLAGS) -o $@ $<
# Linker
$(PROGRAM): $(OBJS)
	$(F90) $(OBJS) $(LIBS)  -o $@ $^

all:
	@make clean
	@cd $(DIR_BIN)
	make $(PROGRAM) -f Makefile
	@mv *.mod $(DIR_MOD)
	@mv *.o $(DIR_OBJ)
	@mv $(PROGRAM) $(DIR_BIN)

clean:
	@rm -f $(DIR_OBJ)/*.o $(DIR_BIN)/$(PROGRAM)
	@rm -f *.mod *.o $(DIR_SRC)/*.mod $(DIR_SRC)/*.o

.PHONY: debug default clean

# Dependencies
# Main program depends on all modules
$(PRG_OBJ) : $(MOD_OBJS)


