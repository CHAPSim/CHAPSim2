.TH "continuity_eq_mod" 3 "Thu Jan 26 2023" "CHAPSim2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
continuity_eq_mod
.SH SYNOPSIS
.br
.PP
.SS "Functions/Subroutines"

.in +1c
.ti -1c
.RI "subroutine, public \fBcalculate_drhodt\fP (dm, ddens, ddensm1, ddensm2, drhodt)"
.br
.RI "To calculate d(\\rho)/dt in the continuity eq\&. "
.ti -1c
.RI "subroutine, public \fBget_divergence_vel\fP (ux, uy, uz, div, dm)"
.br
.RI "To calculate divergence of (rho * u) or divergence of (u) "
.ti -1c
.RI "subroutine, public \fBget_divergence_vel_x2z\fP (ux, uy, uz, div_zpencil_ggg, dm)"
.br
.RI "To calculate divergence of (rho * u) or divergence of (u) "
.ti -1c
.RI "subroutine, public \fBcheck_mass_conservation\fP (fl, dm)"
.br
.RI "To calculate divergence of (rho * u) or divergence of (u) "
.in -1c
.SH "Function/Subroutine Documentation"
.PP 
.SS "subroutine, public continuity_eq_mod::calculate_drhodt (type(\fBt_domain\fP), intent(in) dm, real(wp), dimension(dm%dccc%xsz(1), dm%dccc%xsz(2), dm%dccc%xsz(3)), intent(in) ddens, real(wp), dimension(dm%dccc%xsz(1), dm%dccc%xsz(2), dm%dccc%xsz(3)), intent(in) ddensm1, real(wp), dimension(dm%dccc%xsz(1), dm%dccc%xsz(2), dm%dccc%xsz(3)), intent(in) ddensm2, real(wp), dimension(dm%dccc%xsz(1), dm%dccc%xsz(2), dm%dccc%xsz(3)), intent(out) drhodt)"

.PP
To calculate d(\\rho)/dt in the continuity eq\&. 
.PP
\fBParameters\fP
.RS 4
\fIdDens\fP density at the current time step 
.br
\fIdDensm1\fP density at the t-1 time step 
.br
\fIdDensm2\fP density at the t-2 time step 
.br
\fIdrhodt\fP d(rho)/dt 
.br
\fIitime\fP the sub-step in RK3 
.RE
.PP

.SS "subroutine, public continuity_eq_mod::check_mass_conservation (type(\fBt_flow\fP), intent(inout) fl, type(\fBt_domain\fP), intent(in) dm)"

.PP
To calculate divergence of (rho * u) or divergence of (u) 
.PP
\fBParameters\fP
.RS 4
\fIux\fP ux or gx 
.br
\fIuy\fP uy or gy 
.br
\fIuz\fP uz or gz 
.br
\fIdiv\fP div(u) or div(g) 
.br
\fId\fP domain 
.RE
.PP

.SS "subroutine, public continuity_eq_mod::get_divergence_vel (real(wp), dimension(dm%dpcc%xsz(1), dm%dpcc%xsz(2), dm%dpcc%xsz(3)), intent(in) ux, real(wp), dimension(dm%dcpc%xsz(1), dm%dcpc%xsz(2), dm%dcpc%xsz(3)), intent(in) uy, real(wp), dimension(dm%dccp%xsz(1), dm%dccp%xsz(2), dm%dccp%xsz(3)), intent(in) uz, real(wp), dimension(dm%dccc%xsz(1), dm%dccc%xsz(2), dm%dccc%xsz(3)), intent(out) div, type(\fBt_domain\fP), intent(in) dm)"

.PP
To calculate divergence of (rho * u) or divergence of (u) 
.PP
\fBParameters\fP
.RS 4
\fIux\fP ux or gx 
.br
\fIuy\fP uy or gy 
.br
\fIuz\fP uz or gz 
.br
\fIdiv\fP div(u) or div(g) 
.br
\fId\fP domain 
.RE
.PP

.SS "subroutine, public continuity_eq_mod::get_divergence_vel_x2z (real(wp), dimension(dm%dpcc%xsz(1), dm%dpcc%xsz(2), dm%dpcc%xsz(3)), intent(in) ux, real(wp), dimension(dm%dcpc%xsz(1), dm%dcpc%xsz(2), dm%dcpc%xsz(3)), intent(in) uy, real(wp), dimension(dm%dccp%xsz(1), dm%dccp%xsz(2), dm%dccp%xsz(3)), intent(in) uz, real(wp), dimension(dm%dccc%zst(1) : dm%dccc%zen(1),                         dm%dccc%zst(2) : dm%dccc%zen(2),                         dm%dccc%zst(3) : dm%dccc%zen(3)), intent(out) div_zpencil_ggg, type(\fBt_domain\fP), intent(in) dm)"

.PP
To calculate divergence of (rho * u) or divergence of (u) 
.PP
\fBParameters\fP
.RS 4
\fIux\fP ux or gx 
.br
\fIuy\fP uy or gy 
.br
\fIuz\fP uz or gz 
.br
\fIdiv\fP div(u) or div(g) 
.br
\fId\fP domain 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for CHAPSim2 from the source code\&.
