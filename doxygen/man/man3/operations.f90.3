.TH "/Users/wei.wang/Work/11_CHAPSim/CHAPSim/CHAPSim2/src/operations.f90" 3 "Thu Jan 26 2023" "CHAPSim2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/wei.wang/Work/11_CHAPSim/CHAPSim/CHAPSim2/src/operations.f90 \- A general operation of derivative and interpolation in 1D\&.  

.SH SYNOPSIS
.br
.PP
.SS "Data Types"

.in +1c
.ti -1c
.RI "type \fBoperations::t_xtdma_lhs\fP"
.br
.in -1c
.SS "Modules"

.in +1c
.ti -1c
.RI "module \fBoperations\fP"
.br
.in -1c
.SS "Functions/Subroutines"

.in +1c
.ti -1c
.RI "subroutine, private \fBoperations::prepare_compact_coefficients\fP (iaccu)"
.br
.RI "Assigned the cooefficients for the compact schemes 
.br
 Scope: mpi called-freq xdomain module all once specified private\&. "
.ti -1c
.RI "subroutine, private \fBoperations::buildup_tdma_lhs_array\fP (n, is_periodic, coeff, a, b, c, d)"
.br
.RI "Assigning the sparse matrix in the LHS of the compact scheme, and calculating the geometry-only dependent variables for the TDMA scheme\&. "
.ti -1c
.RI "subroutine, public \fBoperations::prepare_lhs_coeffs_for_operations\fP"
.br
.RI "Preparing coefficients for TDMA calculation\&. "
.ti -1c
.RI "subroutine, private \fBoperations::prepare_tdma_interp_p2c_rhs_array\fP (fi, fo, nc, coeff, ibc)"
.br
.RI "Preparing the RHS array for the TDMA algorithm for interpolation\&. This subroutine is called repeatly to update the RHS of the TDMA algorithm for the interpolation\&. "
.ti -1c
.RI "subroutine, private \fBoperations::prepare_tdma_interp_c2p_rhs_array\fP (fi, fo, np, coeff, ibc, fbc)"
.br
.RI "Preparing the RHS array for the TDMA algorithm for interpolation\&. This subroutine is called repeatly to update the RHS of the TDMA algorithm for the interpolation\&. "
.ti -1c
.RI "subroutine, private \fBoperations::prepare_tdma_1deri_c2c_rhs_array\fP (fi, fo, nc, coeff, dd, ibc, fbc)"
.br
.RI "Preparing the RHS array for the TDMA algorithm for 1st derivative\&. This subroutine is called repeatly to update the RHS of the TDMA algorithm for the 1st derivative\&. "
.ti -1c
.RI "subroutine, private \fBoperations::prepare_tdma_1deri_p2p_rhs_array\fP (fi, fo, np, coeff, dd, ibc, fbc)"
.br
.RI "Preparing the RHS array for the TDMA algorithm for 1st derivative\&. This subroutine is called repeatly to update the RHS of the TDMA algorithm for the 1st derivative\&. "
.ti -1c
.RI "subroutine, private \fBoperations::prepare_tdma_1deri_c2p_rhs_array\fP (fi, fo, np, coeff, dd, ibc, fbc)"
.br
.RI "Preparing the RHS array for the TDMA algorithm for 1st derivative\&. This subroutine is called repeatly to update the RHS of the TDMA algorithm for the 1st derivative\&. "
.ti -1c
.RI "subroutine, private \fBoperations::prepare_tdma_1deri_p2c_rhs_array\fP (fi, fo, nc, coeff, dd, ibc)"
.br
.RI "Preparing the RHS array for the TDMA algorithm for 1st derivative\&. This subroutine is called repeatly to update the RHS of the TDMA algorithm for the 1st derivative\&. "
.ti -1c
.RI "subroutine, private \fBoperations::prepare_tdma_2deri_c2c_rhs_array\fP (fi, fo, nc, coeff, dd, ibc, fbc)"
.br
.RI "Preparing the RHS array for the TDMA algorithm for 1st derivative\&. This subroutine is called repeatly to update the RHS of the TDMA algorithm for the 1st derivative\&. "
.ti -1c
.RI "subroutine, private \fBoperations::prepare_tdma_2deri_p2p_rhs_array\fP (fi, fo, np, coeff, dd, ibc)"
.br
.RI "Preparing the RHS array for the TDMA algorithm for 1st derivative\&. This subroutine is called repeatly to update the RHS of the TDMA algorithm for the 1st derivative\&. "
.ti -1c
.RI "subroutine, public \fBoperations::get_x_midp_c2p_1d\fP (fi, fo, dm, ibc, fbc)"
.br
.RI "To caculate the mid-point interpolation in 1D\&. This subroutine is called as required to get the mid-point interpolation\&. "
.ti -1c
.RI "subroutine, public \fBoperations::get_x_midp_p2c_1d\fP (fi, fo, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_midp_c2p_1d\fP (fi, fo, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_midp_p2c_1d\fP (fi, fo, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_midp_c2p_1d\fP (fi, fo, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_midp_p2c_1d\fP (fi, fo, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_x_1st_derivative_c2c_1d\fP (fi, fo, dm, ibc, fbc)"
.br
.RI "To caculate the 1st derivative in 1D\&. This subroutine is called as required to get the 1st derivative\&. "
.ti -1c
.RI "subroutine, public \fBoperations::get_x_1st_derivative_p2p_1d\fP (fi, fo, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_x_1st_derivative_c2p_1d\fP (fi, fo, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_x_1st_derivative_p2c_1d\fP (fi, fo, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_1st_derivative_c2c_1d\fP (fi, fo, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_1st_derivative_p2p_1d\fP (fi, fo, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_1st_derivative_c2p_1d\fP (fi, fo, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_1st_derivative_p2c_1d\fP (fi, fo, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_1st_derivative_c2c_1d\fP (fi, fo, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_1st_derivative_p2p_1d\fP (fi, fo, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_1st_derivative_c2p_1d\fP (fi, fo, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_1st_derivative_p2c_1d\fP (fi, fo, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_x_2nd_derivative_c2c_1d\fP (fi, fo, dm, ibc, fbc)"
.br
.RI "To caculate the 2nd derivative in 1D\&. This subroutine is called as required to get the 2nd derivative\&. "
.ti -1c
.RI "subroutine, public \fBoperations::get_x_2nd_derivative_p2p_1d\fP (fi, fo, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_2nd_derivative_c2c_1d\fP (fi, fo, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_2nd_derivative_p2p_1d\fP (fi, fo, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_2nd_derivative_c2c_1d\fP (fi, fo, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_2nd_derivative_p2p_1d\fP (fi, fo, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_x_midp_c2p_3d\fP (fi3d, fo3d, dm, ibc, fbc)"
.br
.RI "To caculate the mid-point interpolation in 3D\&. "
.ti -1c
.RI "subroutine, public \fBoperations::get_x_midp_p2c_3d\fP (fi3d, fo3d, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_midp_c2p_3d\fP (fi3d, fo3d, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_midp_p2c_3d\fP (fi3d, fo3d, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_midp_c2p_3d\fP (fi3d, fo3d, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_midp_p2c_3d\fP (fi3d, fo3d, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_x_1st_derivative_c2c_3d\fP (fi3d, fo3d, dm, ibc, fbc)"
.br
.RI "To caculate the 1st-deriviate in 3D\&. "
.ti -1c
.RI "subroutine, public \fBoperations::get_x_1st_derivative_p2p_3d\fP (fi3d, fo3d, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_x_1st_derivative_c2p_3d\fP (fi3d, fo3d, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_x_1st_derivative_p2c_3d\fP (fi3d, fo3d, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_1st_derivative_c2c_3d\fP (fi3d, fo3d, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_1st_derivative_p2p_3d\fP (fi3d, fo3d, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_1st_derivative_c2p_3d\fP (fi3d, fo3d, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_1st_derivative_p2c_3d\fP (fi3d, fo3d, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_1st_derivative_c2c_3d\fP (fi3d, fo3d, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_1st_derivative_p2p_3d\fP (fi3d, fo3d, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_1st_derivative_c2p_3d\fP (fi3d, fo3d, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_1st_derivative_p2c_3d\fP (fi3d, fo3d, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_x_2nd_derivative_c2c_3d\fP (fi3d, fo3d, dm, ibc, fbc)"
.br
.RI "To caculate the 2nd-deriviate in 3D\&. "
.ti -1c
.RI "subroutine, public \fBoperations::get_x_2nd_derivative_p2p_3d\fP (fi3d, fo3d, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_2nd_derivative_c2c_3d\fP (fi3d, fo3d, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_y_2nd_derivative_p2p_3d\fP (fi3d, fo3d, dm, ibc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_2nd_derivative_c2c_3d\fP (fi3d, fo3d, dm, ibc, fbc)"
.br
.ti -1c
.RI "subroutine, public \fBoperations::get_z_2nd_derivative_p2p_3d\fP (fi3d, fo3d, dm, ibc)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "real(wp), dimension(5, 3, 6), save, public \fBoperations::d1fc2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(5, 4, 6), save, public \fBoperations::d1rc2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(5, 3, 6), save \fBoperations::d1fp2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(5, 4, 6), save \fBoperations::d1rp2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(5, 3, 6), save, public \fBoperations::d1fc2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(5, 4, 6), save, public \fBoperations::d1rc2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(5, 3, 6), save \fBoperations::d1fp2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(5, 4, 6), save \fBoperations::d1rp2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(5, 3, 6), save, public \fBoperations::d2fc2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(5, 4, 6), save, public \fBoperations::d2rc2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(5, 3, 6), save \fBoperations::d2fp2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(5, 4, 6), save \fBoperations::d2rp2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(5, 3, 6), save \fBoperations::m1fp2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(5, 4, 6), save \fBoperations::m1rp2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(5, 3, 6), save, public \fBoperations::m1fc2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(5, 4, 6), save, public \fBoperations::m1rc2p\fP"
.br
.ti -1c
.RI "type(t_xtdma_lhs), dimension(:), allocatable \fBoperations::xtdma_lhs\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::ad1y_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bd1y_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cd1y_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dd1y_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::ad1y_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bd1y_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cd1y_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dd1y_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::ad1y_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bd1y_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cd1y_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dd1y_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::ad1y_c2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bd1y_c2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cd1y_c2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dd1y_c2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::ad2y_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bd2y_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cd2y_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dd2y_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::ad2y_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bd2y_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cd2y_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dd2y_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::am1y_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bm1y_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cm1y_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dm1y_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::am1y_c2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bm1y_c2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cm1y_c2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dm1y_c2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::ad1z_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bd1z_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cd1z_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dd1z_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::ad1z_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bd1z_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cd1z_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dd1z_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::ad1z_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bd1z_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cd1z_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dd1z_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::ad1z_c2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bd1z_c2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cd1z_c2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dd1z_c2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::ad2z_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bd2z_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cd2z_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dd2z_p2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::ad2z_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bd2z_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cd2z_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dd2z_c2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::am1z_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bm1z_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cm1z_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dm1z_p2c\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::am1z_c2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::bm1z_c2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::cm1z_c2p\fP"
.br
.ti -1c
.RI "real(wp), dimension(:, :, :), allocatable \fBoperations::dm1z_c2p\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
A general operation of derivative and interpolation in 1D\&. 


.SH "Author"
.PP 
Generated automatically by Doxygen for CHAPSim2 from the source code\&.
