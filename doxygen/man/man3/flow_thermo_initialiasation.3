.TH "flow_thermo_initialiasation" 3 "Thu Jan 26 2023" "CHAPSim2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
flow_thermo_initialiasation
.SH SYNOPSIS
.br
.PP
.SS "Functions/Subroutines"

.in +1c
.ti -1c
.RI "subroutine, private \fBallocate_flow_variables\fP (fl, dm)"
.br
.RI "Allocate flow and thermal variables\&. 
.br
 "
.ti -1c
.RI "subroutine, private \fBallocate_thermo_variables\fP (tm, dm)"
.br
.ti -1c
.RI "subroutine, private \fBgenerate_random_field\fP (dm, ux, uy, uz, p, lnoise)"
.br
.RI "Generate a flow profile for Poiseuille flow in channel or pipe\&. 
.br
 "
.ti -1c
.RI "subroutine, private \fBgenerate_poiseuille_flow_profile\fP (dm, ux_1c1)"
.br
.RI "Generate a flow profile for Poiseuille flow in channel or pipe\&. 
.br
 "
.ti -1c
.RI "subroutine, private \fBinitialize_poiseuille_flow\fP (dm, ux, uy, uz, p, lnoise)"
.br
.RI "Initialize Poiseuille flow in channel or pipe\&. 
.br
 "
.ti -1c
.RI "subroutine, private \fBinitialize_flow_from_given_values\fP (dm, ux, uy, uz, p, lnoise, velo)"
.br
.ti -1c
.RI "subroutine, public \fBinitialize_flow_fields\fP (fl, dm)"
.br
.ti -1c
.RI "subroutine, public \fBinitialize_thermo_fields\fP (tm, fl, dm)"
.br
.ti -1c
.RI "subroutine, private \fBinitialize_vortexgreen_2dflow\fP (dm, ux, uy, uz, p)"
.br
.RI "Initialize Vortex Green flow\&. "
.ti -1c
.RI "subroutine, public \fBvalidate_tgv2d_error\fP (fl, dm)"
.br
.ti -1c
.RI "subroutine, private \fBinitialize_vortexgreen_3dflow\fP (dm, ux, uy, uz, p)"
.br
.RI "Initialize Vortex Green flow\&. "
.in -1c
.SH "Function/Subroutine Documentation"
.PP 
.SS "subroutine, private flow_thermo_initialiasation::allocate_flow_variables (type(\fBt_flow\fP), intent(inout) fl, type(\fBt_domain\fP), intent(in) dm)\fC [private]\fP"

.PP
Allocate flow and thermal variables\&. 
.br
 Scope: mpi called-freq xdomain module all once specified private 
.PP
\fBParameters\fP
.RS 4
\fInone\fP NA 
.br
\fInone\fP NA 
.RE
.PP

.SS "subroutine, private flow_thermo_initialiasation::allocate_thermo_variables (type(\fBt_thermo\fP), intent(inout) tm, type(\fBt_domain\fP), intent(in) dm)\fC [private]\fP"

.SS "subroutine, private flow_thermo_initialiasation::generate_poiseuille_flow_profile (type(\fBt_domain\fP), intent(in) dm, real(\fBwp\fP), dimension(:), intent(out) ux_1c1)\fC [private]\fP"

.PP
Generate a flow profile for Poiseuille flow in channel or pipe\&. 
.br
 Scope: mpi called-freq xdomain module all once specified private 
.PP
\fBParameters\fP
.RS 4
\fId\fP domain 
.br
\fIux_1c1\fP u(yc), velocity profile along wall-normal direction 
.RE
.PP

.SS "subroutine, private flow_thermo_initialiasation::generate_random_field (type(\fBt_domain\fP), intent(in) dm, real(\fBwp\fP), dimension(dm%dpcc%xsz(1), dm%dpcc%xsz(2), dm%dpcc%xsz(3)), intent(inout) ux, real(\fBwp\fP), dimension(dm%dcpc%xsz(1), dm%dcpc%xsz(2), dm%dcpc%xsz(3)), intent(inout) uy, real(\fBwp\fP), dimension(dm%dccp%xsz(1), dm%dccp%xsz(2), dm%dccp%xsz(3)), intent(inout) uz, real(\fBwp\fP), dimension(dm%dccc%xsz(1), dm%dccc%xsz(2), dm%dccc%xsz(3)), intent(inout) p, real(\fBwp\fP), intent(in) lnoise)\fC [private]\fP"

.PP
Generate a flow profile for Poiseuille flow in channel or pipe\&. 
.br
 Scope: mpi called-freq xdomain module all once specified private 
.PP
\fBParameters\fP
.RS 4
\fI<br>\fP 
.br
\fI<br>\fP 
.RE
.PP

.SS "subroutine, public flow_thermo_initialiasation::initialize_flow_fields (type(\fBt_flow\fP), intent(inout) fl, type(\fBt_domain\fP), intent(inout) dm)"

.SS "subroutine, private flow_thermo_initialiasation::initialize_flow_from_given_values (type(\fBt_domain\fP), intent(in) dm, real(\fBwp\fP), dimension(dm%dpcc%xsz(1), dm%dpcc%xsz(2), dm%dpcc%xsz(3)), intent(out) ux, real(\fBwp\fP), dimension(dm%dcpc%xsz(1), dm%dcpc%xsz(2), dm%dcpc%xsz(3)), intent(out) uy, real(\fBwp\fP), dimension(dm%dccp%xsz(1), dm%dccp%xsz(2), dm%dccp%xsz(3)), intent(out) uz, real(\fBwp\fP), dimension(dm%dccc%xsz(1), dm%dccc%xsz(2), dm%dccc%xsz(3)), intent(out) p, real(\fBwp\fP), intent(in) lnoise, real(\fBwp\fP), dimension(3), intent(in) velo)\fC [private]\fP"

.SS "subroutine, private flow_thermo_initialiasation::initialize_poiseuille_flow (type(\fBt_domain\fP), intent(in) dm, real(\fBwp\fP), dimension(dm%dpcc%xsz(1), dm%dpcc%xsz(2), dm%dpcc%xsz(3)), intent(out) ux, real(\fBwp\fP), dimension(dm%dcpc%xsz(1), dm%dcpc%xsz(2), dm%dcpc%xsz(3)), intent(out) uy, real(\fBwp\fP), dimension(dm%dccp%xsz(1), dm%dccp%xsz(2), dm%dccp%xsz(3)), intent(out) uz, real(\fBwp\fP), dimension(dm%dccc%xsz(1), dm%dccc%xsz(2), dm%dccc%xsz(3)), intent(out) p, real(\fBwp\fP), intent(in) lnoise)\fC [private]\fP"

.PP
Initialize Poiseuille flow in channel or pipe\&. 
.br
 Scope: mpi called-freq xdomain module all once specified private 
.PP
\fBParameters\fP
.RS 4
\fId\fP domain 
.br
\fIf\fP flow 
.RE
.PP

.SS "subroutine, public flow_thermo_initialiasation::initialize_thermo_fields (type(\fBt_thermo\fP), intent(inout) tm, type(\fBt_flow\fP), intent(inout) fl, type(\fBt_domain\fP), intent(inout) dm)"

.SS "subroutine, private flow_thermo_initialiasation::initialize_vortexgreen_2dflow (type(\fBt_domain\fP), intent(in) dm, real(\fBwp\fP), dimension(:, :, :), intent(inout) ux, real(\fBwp\fP), dimension(:, :, :), intent(inout) uy, real(\fBwp\fP), dimension(:, :, :), intent(inout) uz, real(\fBwp\fP), dimension (:, :, :), intent(inout) p)\fC [private]\fP"

.PP
Initialize Vortex Green flow\&. This subroutine is called locally once\&. 
.PP
\fBParameters\fP
.RS 4
\fId\fP domain 
.br
\fIf\fP flow 
.RE
.PP

.SS "subroutine, private flow_thermo_initialiasation::initialize_vortexgreen_3dflow (type(\fBt_domain\fP), intent(in) dm, real(\fBwp\fP), dimension(:, :, :), intent(inout) ux, real(\fBwp\fP), dimension(:, :, :), intent(inout) uy, real(\fBwp\fP), dimension(:, :, :), intent(inout) uz, real(\fBwp\fP), dimension (:, :, :), intent(inout) p)\fC [private]\fP"

.PP
Initialize Vortex Green flow\&. This subroutine is called locally once\&. 
.PP
\fBParameters\fP
.RS 4
\fId\fP domain 
.br
\fIf\fP flow 
.RE
.PP

.SS "subroutine, public flow_thermo_initialiasation::validate_tgv2d_error (type(\fBt_flow\fP), intent(in) fl, type(\fBt_domain\fP), intent(in) dm)"

.SH "Author"
.PP 
Generated automatically by Doxygen for CHAPSim2 from the source code\&.
